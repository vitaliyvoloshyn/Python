# Создать список, состоящий из кубов нечётных чисел от 1 до 1000 (куб X - третья степень числа X):
# Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
# Например, число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7.
# Внимание: использовать только арифметические операции!
# К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка, сумма цифр которых делится
# нацело на 7. * Решить задачу под пунктом b, не создавая новый список.


def calculation(coef=0):
    quad_list = []  # список из кубов нечетных чисел от 1 до 1000
    result_sum = 0  # сумма тех чисел из списка, сумма цифр которых делится нацело на 7
    n = 0  # количество чисел из списка, сумма цифр которых делится нацело на 7

    for i in range(1, 1001):
        if i % 2 != 0:
            number = i ** 3 + coef
            quad_list.append(number)
            sum_dig = 0  # сумма цифр одного числа из списка
            temp_dig = number  # техническая переменная

            # блок вычисления суммы цифр числа
            for j in range(1, 11):
                sum_dig += temp_dig % 10
                temp_dig //= 10

            # блок проверки деления нацело на 7
            if sum_dig % 7 == 0:
                result_sum += number
                n += 1
                if coef == 0:
                    print(
                        f'Куб числа {i} - {number}... Сумма цифр этого числа {sum_dig}')
                else:
                    print(
                        f'Куб числа {i} + {coef} - {number}... Сумма цифр этого числа {sum_dig}')

    print(f'Количество чисел, подходящих под условия - {n}, их сумма {result_sum}')
    # for i in quad_list:
    #     print(i)


calculation()
print('-' * 100)
calculation(17)
