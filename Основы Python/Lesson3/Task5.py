"""
Задание 5
Реализовать функцию get_jokes(), возвращающую n шуток, сформированных из трех случайных слов, взятых из трёх списков (по одному из каждого):
nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]
        Например:
~>>> get_jokes(2)
["лес завтра зеленый", "город вчера веселый"]
Документировать код функции.
Сможете ли вы добавить еще один аргумент — флаг, разрешающий или запрещающий повторы слов в шутках
(когда каждое слово можно использовать только в одной шутке)? Сможете ли вы сделать аргументы именованными?
"""

"""Алгоритм решения
создаем функцию, в которой обьявляем три списка со словами (по пять в каждом)
на вход принимает два параметра - кол-во возвращаемых шуток и флаг, указывающий
на возможность повтора слов в шутках.
сначала проверям кол-во возвращаемых шуток. Если в режиме без повтора слов юзер
запросит более 5 шуток, то выдаем предупреждение и возвращаем пустой список.
После проверки обьявляем пустой возвращаемый список - out_list и пустую строку -
jokes_str, в которую будет помещаться сформированная шутка.

Для формирования списка с повтором слов в шутках запускаем цикл по кол-ву
необходимых шуток. С каждой итерацией в переменную jokes_str извлекаем по одному
рандомному слову из каждого списка и добавляем получившуюся строку в выходной
список.

Для формирования списка без повтора слов в шутках запускаем цикл по кол-ву
необходимых шуток. Здесь вводим дополнительную переменную jokes_list - список, в
которые добавляем рандомно извлеченные из трех списков слова. jokes_list при
каждой итерации должен обнуляться. Каждый раз извлекая из списка рандомное слово
это слово мы должны удалить из списка. Извлечение с удалением делаем с помощью 
метода pop. Таким образом сокращая список мы добиваемся неповторения слов в 
шутках. Сформированный список jokes_list с помощью метода join добавляем в 
выходной список.
В конце возвращаем список шуток.
"""

from random import choice


def get_jokes(jokes_count=1, word_repeat=False):
    """возвращает комбинацию из случайных трех слов из трех списков"""

    if jokes_count > 5 and not word_repeat:
        print('Ошибка: Без повтора слов количество шуток не может превышать 5')
        return []

    out_list = []  # возвращаемый список
    jokes_str = ''  # сформированная шутка

    noums = ['автомобиль', 'лес', 'огонь', 'город', 'дом']
    adverbs = ['сегодня', 'вчера', 'завтра', 'позавчера', 'ночью']
    adjectives = ['веселый', 'яркий', 'зеленый', 'утопичный', 'мягкий']

    if word_repeat:
        # создание возвращаемого списка с повтором слов в шутках
        for i in range(jokes_count):
            jokes_str = ' '.join([choice(noums), choice(adverbs), choice(adjectives)])
            out_list.append(jokes_str)
    else:
        # создание возвращаемого списка без повтора слов в шутках
        for i in range(jokes_count):
            jokes_list = []  # список для сформированной шутки
            jokes_list.append(noums.pop(noums.index(choice(noums))))
            jokes_list.append(adverbs.pop(adverbs.index(choice(adverbs))))
            jokes_list.append(adjectives.pop(adjectives.index(choice(adjectives))))
            out_list.append(' '.join(jokes_list))

    return out_list


print(f'{"Вывод без повторения слов":-^100}')
print(get_jokes(5))

print(f'{"Вывод с повторением слов":-^100}')
print(get_jokes(7, True))
