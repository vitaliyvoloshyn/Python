"""
ЗАДАНИЕ 4
(вместо задачи 3) Написать функцию thesaurus_adv(), принимающую в качестве аргументов строки в формате «Имя Фамилия»
и возвращающую словарь, в котором ключи — первые буквы фамилий, а значения — словари, реализованные по схеме
предыдущего задания и содержащие записи, в которых фамилия начинается с соответствующей буквы. Например:

thesaurus_adv("Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева")
{
    "А": {
        "П": ["Петр Алексеев"]
    },
    "С": {
        "И": ["Иван Сергеев", "Инна Серова"],
        "А": ["Анна Савельева"]
    }
}
"""


def thesaurus_adv(*args: str, is_sort: bool = False):
    dict_last_name = {}
    list_last_name = []  # список значений (имен и фамилий), отвечающий определенному ключу в словаре
# сначала разбиваем по фамилиям
    # обход списка аргументов
    for j in args:
        # проверяем, наличие ключа (первый символ второго слова аргумента
        if list(j.split(' '))[1][0] in dict_last_name:
            # расширяем список имен и фамилий значением по ключу
            list_last_name.extend(dict_last_name.get(list(j.split(' '))[1][0]))
            # добавляем в список новое имя и фамилию
            list_last_name.append(j)
            # ложим в значение по ключу копию списка
            dict_last_name[list(j.split(' '))[1][0]] = list_last_name[:]
        else:
            dict_last_name[list(j.split(' '))[1][0]] = [j]
        list_last_name.clear()

# теперь разбиваем по именам
    dict_name = {}  # словарь, который вставляем в словарь по ключу
    list_name = []  # список значений (имен), отвечающий определенному ключу в словаре
    # обход сформированного словаря
    for key, val in dict_last_name.items():
        for i in tuple(val):
            if i[0] in dict_name:  # проверяем, наличие ключа (первый символ аргумента) в словаре
                # расширяем список имен значением по ключу
                list_name.extend(dict_name.get(i[0]))
                # добавляем в список новое имя
                list_name.append(i)
                # ложим в значение по ключу копию списка
                dict_name[i[0]] = list_name[:]
            else:
                dict_name[i[0]] = [i]
            list_name.clear()
        # обновляем значение по ключу (вставляем разбитый по именам словарь)
        dict_last_name[key] = dict_name.copy()
        dict_name.clear()

    # сортировка по ключам
    if is_sort:
        sort_dict = {}
        sort_list = sorted(dict_last_name.keys())  # создаем список отсортированных ключей
        # проходим список sort_list в цикле и собираем новый словарь
        for value in sort_list:
            sort_dict[value] = dict_last_name.get(value)
        dict_last_name = sort_dict

    return dict_last_name


names = (
    "Иван Сергеев", "Инна Серова", "Петр Алексеев", "Илья Иванов", "Анна Савельева", "Елизавета Акулова",
    "Петр Ибрагимов")
print(f'{"Несортированный словарь":-^100}\n {thesaurus_adv(*names, is_sort=False)}')
print(f'{"Сортированный словарь":-^100}\n {thesaurus_adv(*names, is_sort=True)}')
